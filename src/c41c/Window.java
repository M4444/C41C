/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package c41c;

import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.math.BigInteger;
import java.util.Collections;
import javax.swing.AbstractButton;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.*;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.LayoutStyle;
import javax.swing.text.BadLocationException;
import javax.swing.text.Document;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;

/**
 *
 * @author M
 */
public class Window extends javax.swing.JFrame {

    /**
     * Creates new form Window
     */
    public Window() {
        Operation = "";
        DivisionByZero = false;
        OperationUnderway = false;
        SecondOperandEntered = false;
        Base = 10;
        Operands = new BigInteger[2];
        Operands[0] = BigInteger.ZERO;
        Operands[1] = BigInteger.ZERO;
        Active = 0;
        LABEL_bitGroup = new JLabel[TOTAL_BIT_NUM];

        initComponents();
        myInitComponets();
        // Set text pane atrributes
        SimpleAttributeSet attribs = new SimpleAttributeSet();
        StyleConstants.setAlignment(attribs , StyleConstants.ALIGN_RIGHT);
        StyleConstants.setFontSize(attribs, 18);
        TextPane.setParagraphAttributes(attribs, rootPaneCheckingEnabled);
        // Set Key Dispatcher
        addKeyDispatcher();
        // Set app location
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BTNGroup_base = new javax.swing.ButtonGroup();
        BTNGroup_digits = new javax.swing.ButtonGroup();
        PANEL_base = new javax.swing.JPanel();
        RadioB_Hex = new javax.swing.JRadioButton();
        RadioB_Dec = new javax.swing.JRadioButton();
        RadioB_Oct = new javax.swing.JRadioButton();
        RadioB_Bin = new javax.swing.JRadioButton();
        PANEL_Bits = new javax.swing.JPanel();
        LABEL_bit0 = new javax.swing.JLabel();
        LABEL_bit1 = new javax.swing.JLabel();
        LABEL_bit2 = new javax.swing.JLabel();
        LABEL_bit3 = new javax.swing.JLabel();
        LABEL_bit4 = new javax.swing.JLabel();
        LABEL_bit5 = new javax.swing.JLabel();
        LABEL_bit6 = new javax.swing.JLabel();
        LABEL_bit7 = new javax.swing.JLabel();
        LABEL_bit8 = new javax.swing.JLabel();
        LABEL_bit9 = new javax.swing.JLabel();
        LABEL_bit10 = new javax.swing.JLabel();
        LABEL_bit11 = new javax.swing.JLabel();
        LABEL_bit12 = new javax.swing.JLabel();
        LABEL_bit13 = new javax.swing.JLabel();
        LABEL_bit14 = new javax.swing.JLabel();
        LABEL_bit15 = new javax.swing.JLabel();
        LABEL_bit16 = new javax.swing.JLabel();
        LABEL_bit17 = new javax.swing.JLabel();
        LABEL_bit18 = new javax.swing.JLabel();
        LABEL_bit19 = new javax.swing.JLabel();
        LABEL_bit20 = new javax.swing.JLabel();
        LABEL_bit21 = new javax.swing.JLabel();
        LABEL_bit22 = new javax.swing.JLabel();
        LABEL_bit23 = new javax.swing.JLabel();
        LABEL_bit24 = new javax.swing.JLabel();
        LABEL_bit25 = new javax.swing.JLabel();
        LABEL_bit26 = new javax.swing.JLabel();
        LABEL_bit27 = new javax.swing.JLabel();
        LABEL_bit28 = new javax.swing.JLabel();
        LABEL_bit29 = new javax.swing.JLabel();
        LABEL_bit30 = new javax.swing.JLabel();
        LABEL_bit31 = new javax.swing.JLabel();
        ScrollPane = new javax.swing.JScrollPane();
        TextPane = new javax.swing.JTextPane();
        BUTTON_M_minus = new javax.swing.JButton();
        BUTTON_sqrt = new javax.swing.JButton();
        BUTTON_Max = new javax.swing.JButton();
        BUTTON_Min = new javax.swing.JButton();
        BUTTON_M_plus = new javax.swing.JButton();
        BUTTON_plus_minus = new javax.swing.JButton();
        BUTTON_divide = new javax.swing.JButton();
        BUTTON_multiply = new javax.swing.JButton();
        BUTTON_minus = new javax.swing.JButton();
        BUTTON_plus = new javax.swing.JButton();
        BUTTON_equal = new javax.swing.JButton();
        BUTTON_dot = new javax.swing.JButton();
        BUTTON_0 = new javax.swing.JButton();
        BUTTON_1 = new javax.swing.JButton();
        BUTTON_2 = new javax.swing.JButton();
        BUTTON_3 = new javax.swing.JButton();
        BUTTON_4 = new javax.swing.JButton();
        BUTTON_5 = new javax.swing.JButton();
        BUTTON_6 = new javax.swing.JButton();
        BUTTON_7 = new javax.swing.JButton();
        BUTTON_8 = new javax.swing.JButton();
        BUTTON_9 = new javax.swing.JButton();
        BUTTON_A = new javax.swing.JButton();
        BUTTON_B = new javax.swing.JButton();
        BUTTON_C = new javax.swing.JButton();
        BUTTON_D = new javax.swing.JButton();
        BUTTON_E = new javax.swing.JButton();
        BUTTON_F = new javax.swing.JButton();
        BUTTON_MS = new javax.swing.JButton();
        BUTTON_CC = new javax.swing.JButton();
        BUTTON_CE = new javax.swing.JButton();
        BUTTON_MR = new javax.swing.JButton();
        BUTTON_MC = new javax.swing.JButton();
        BUTTON_backspace = new javax.swing.JButton();
        ComboBox = new javax.swing.JComboBox<>();
        CHECK_BOX_signed = new javax.swing.JCheckBox();
        BUTTON_AsR = new javax.swing.JButton();
        BUTTON_LsR = new javax.swing.JButton();
        BUTTON_RoR = new javax.swing.JButton();
        BUTTON_Not = new javax.swing.JButton();
        BUTTON_And = new javax.swing.JButton();
        BUTTON_closed_parenthesis = new javax.swing.JButton();
        BUTTON_Or = new javax.swing.JButton();
        BUTTON_Xor = new javax.swing.JButton();
        BUTTON_RoL = new javax.swing.JButton();
        BUTTON_ShL = new javax.swing.JButton();
        BUTTON_Mod = new javax.swing.JButton();
        BUTTON_open_parenthesis = new javax.swing.JButton();
        LABEL_carry_flag = new javax.swing.JLabel();
        LABEL_parity_flag = new javax.swing.JLabel();
        LABEL_zero_flag = new javax.swing.JLabel();
        LABEL_sign_flag = new javax.swing.JLabel();
        LABEL_overflow_flag = new javax.swing.JLabel();
        LABEL_carry_bit = new javax.swing.JLabel();
        LABEL_parity_bit = new javax.swing.JLabel();
        LABEL_zero_bit = new javax.swing.JLabel();
        LABEL_sign_bit = new javax.swing.JLabel();
        LABEL_overflow_bit = new javax.swing.JLabel();
        MenuBar = new javax.swing.JMenuBar();
        MENU_View = new javax.swing.JMenu();
        MENU_Edit = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("C41C");
        setResizable(false);
        setSize(new java.awt.Dimension(386, 373));

        PANEL_base.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PANEL_base.setPreferredSize(new java.awt.Dimension(100, 92));

        BTNGroup_base.add(RadioB_Hex);
        RadioB_Hex.setText("Hex");
        RadioB_Hex.setName("16"); // NOI18N
        RadioB_Hex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioB_Group_base_ActionPerformed(evt);
            }
        });

        BTNGroup_base.add(RadioB_Dec);
        RadioB_Dec.setSelected(true);
        RadioB_Dec.setText("Dec");
        RadioB_Dec.setName("10"); // NOI18N
        RadioB_Dec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioB_Group_base_ActionPerformed(evt);
            }
        });

        BTNGroup_base.add(RadioB_Oct);
        RadioB_Oct.setText("Oct");
        RadioB_Oct.setName("8"); // NOI18N
        RadioB_Oct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioB_Group_base_ActionPerformed(evt);
            }
        });

        BTNGroup_base.add(RadioB_Bin);
        RadioB_Bin.setText("Bin");
        RadioB_Bin.setName("2"); // NOI18N
        RadioB_Bin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RadioB_Group_base_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PANEL_baseLayout = new javax.swing.GroupLayout(PANEL_base);
        PANEL_base.setLayout(PANEL_baseLayout);
        PANEL_baseLayout.setHorizontalGroup(
            PANEL_baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_baseLayout.createSequentialGroup()
                .addGroup(PANEL_baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RadioB_Hex)
                    .addComponent(RadioB_Dec)
                    .addComponent(RadioB_Oct)
                    .addComponent(RadioB_Bin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PANEL_baseLayout.setVerticalGroup(
            PANEL_baseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_baseLayout.createSequentialGroup()
                .addComponent(RadioB_Hex, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioB_Dec, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioB_Oct, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RadioB_Bin, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        PANEL_Bits.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        LABEL_bit0.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit0.setText("0");
        LABEL_bit0.setToolTipText("");
        LABEL_bit0.setName("0"); // NOI18N

        LABEL_bit1.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit1.setText("0");
        LABEL_bit1.setName("1"); // NOI18N

        LABEL_bit2.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit2.setText("0");
        LABEL_bit2.setName("2"); // NOI18N

        LABEL_bit3.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit3.setText("0");
        LABEL_bit3.setToolTipText("");
        LABEL_bit3.setName("3"); // NOI18N

        LABEL_bit4.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit4.setText("0");
        LABEL_bit4.setToolTipText("");
        LABEL_bit4.setName("4"); // NOI18N

        LABEL_bit5.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit5.setText("0");
        LABEL_bit5.setName("5"); // NOI18N

        LABEL_bit6.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit6.setText("0");
        LABEL_bit6.setName("6"); // NOI18N

        LABEL_bit7.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit7.setText("0");
        LABEL_bit7.setToolTipText("");
        LABEL_bit7.setName("7"); // NOI18N

        LABEL_bit8.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit8.setText("0");
        LABEL_bit8.setToolTipText("");
        LABEL_bit8.setName("8"); // NOI18N

        LABEL_bit9.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit9.setText("0");
        LABEL_bit9.setName("9"); // NOI18N

        LABEL_bit10.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit10.setText("0");
        LABEL_bit10.setName("10"); // NOI18N

        LABEL_bit11.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit11.setText("0");
        LABEL_bit11.setToolTipText("");
        LABEL_bit11.setName("11"); // NOI18N

        LABEL_bit12.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit12.setText("0");
        LABEL_bit12.setToolTipText("");
        LABEL_bit12.setName("12"); // NOI18N

        LABEL_bit13.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit13.setText("0");
        LABEL_bit13.setName("13"); // NOI18N

        LABEL_bit14.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit14.setText("0");
        LABEL_bit14.setName("14"); // NOI18N

        LABEL_bit15.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit15.setText("0");
        LABEL_bit15.setToolTipText("");
        LABEL_bit15.setName("15"); // NOI18N

        LABEL_bit16.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit16.setText("0");
        LABEL_bit16.setToolTipText("");
        LABEL_bit16.setName("16"); // NOI18N

        LABEL_bit17.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit17.setText("0");
        LABEL_bit17.setName("17"); // NOI18N

        LABEL_bit18.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit18.setText("0");
        LABEL_bit18.setName("18"); // NOI18N

        LABEL_bit19.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit19.setText("0");
        LABEL_bit19.setToolTipText("");
        LABEL_bit19.setName("19"); // NOI18N

        LABEL_bit20.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit20.setText("0");
        LABEL_bit20.setToolTipText("");
        LABEL_bit20.setName("20"); // NOI18N

        LABEL_bit21.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit21.setText("0");
        LABEL_bit21.setName("21"); // NOI18N

        LABEL_bit22.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit22.setText("0");
        LABEL_bit22.setName("22"); // NOI18N

        LABEL_bit23.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit23.setText("0");
        LABEL_bit23.setToolTipText("");
        LABEL_bit23.setName("23"); // NOI18N

        LABEL_bit24.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit24.setText("0");
        LABEL_bit24.setToolTipText("");
        LABEL_bit24.setName("24"); // NOI18N

        LABEL_bit25.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit25.setText("0");
        LABEL_bit25.setName("25"); // NOI18N

        LABEL_bit26.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit26.setText("0");
        LABEL_bit26.setName("26"); // NOI18N

        LABEL_bit27.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit27.setText("0");
        LABEL_bit27.setToolTipText("");
        LABEL_bit27.setName("27"); // NOI18N

        LABEL_bit28.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit28.setText("0");
        LABEL_bit28.setToolTipText("");
        LABEL_bit28.setName("28"); // NOI18N

        LABEL_bit29.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit29.setText("0");
        LABEL_bit29.setName("29"); // NOI18N

        LABEL_bit30.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit30.setText("0");
        LABEL_bit30.setName("30"); // NOI18N

        LABEL_bit31.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
        LABEL_bit31.setText("0");
        LABEL_bit31.setToolTipText("");
        LABEL_bit31.setName("31"); // NOI18N

        javax.swing.GroupLayout PANEL_BitsLayout = new javax.swing.GroupLayout(PANEL_Bits);
        PANEL_Bits.setLayout(PANEL_BitsLayout);
        PANEL_BitsLayout.setHorizontalGroup(
            PANEL_BitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PANEL_BitsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LABEL_bit31)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit30)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit29)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LABEL_bit27)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit26)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit25)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LABEL_bit23)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit22)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit21)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LABEL_bit19)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit18)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit17)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit16)
                .addGap(18, 18, 18)
                .addComponent(LABEL_bit15)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit14)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit13)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LABEL_bit11)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit10)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit9)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LABEL_bit7)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit6)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit5)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LABEL_bit3)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit2)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit1)
                .addGap(1, 1, 1)
                .addComponent(LABEL_bit0)
                .addGap(14, 14, 14))
        );
        PANEL_BitsLayout.setVerticalGroup(
            PANEL_BitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PANEL_BitsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PANEL_BitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PANEL_BitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LABEL_bit16)
                        .addComponent(LABEL_bit17)
                        .addComponent(LABEL_bit18)
                        .addComponent(LABEL_bit19)
                        .addComponent(LABEL_bit20)
                        .addComponent(LABEL_bit21)
                        .addComponent(LABEL_bit22)
                        .addComponent(LABEL_bit23)
                        .addComponent(LABEL_bit24)
                        .addComponent(LABEL_bit25)
                        .addComponent(LABEL_bit26)
                        .addComponent(LABEL_bit27)
                        .addComponent(LABEL_bit28)
                        .addComponent(LABEL_bit29)
                        .addComponent(LABEL_bit30)
                        .addComponent(LABEL_bit31))
                    .addGroup(PANEL_BitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LABEL_bit8)
                        .addComponent(LABEL_bit9)
                        .addComponent(LABEL_bit10)
                        .addComponent(LABEL_bit11)
                        .addComponent(LABEL_bit12)
                        .addComponent(LABEL_bit13)
                        .addComponent(LABEL_bit14)
                        .addComponent(LABEL_bit15))
                    .addGroup(PANEL_BitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LABEL_bit4)
                        .addComponent(LABEL_bit5)
                        .addComponent(LABEL_bit6)
                        .addComponent(LABEL_bit7))
                    .addGroup(PANEL_BitsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LABEL_bit0)
                        .addComponent(LABEL_bit1)
                        .addComponent(LABEL_bit2)
                        .addComponent(LABEL_bit3)))
                .addContainerGap())
        );

        TextPane.setEditable(false);
        TextPane.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        TextPane.setText("0");
        TextPane.setFocusable(false);
        ScrollPane.setViewportView(TextPane);

        BUTTON_M_minus.setText("M-");
        BUTTON_M_minus.setToolTipText("");
        BUTTON_M_minus.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_sqrt.setText("√");
        BUTTON_sqrt.setToolTipText("");
        BUTTON_sqrt.setEnabled(false);
        BUTTON_sqrt.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_Max.setText("Max");
        BUTTON_Max.setToolTipText("");
        BUTTON_Max.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_Max.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_MaxActionPerformed(evt);
            }
        });

        BUTTON_Min.setText("Min");
        BUTTON_Min.setToolTipText("");
        BUTTON_Min.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_Min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_MinActionPerformed(evt);
            }
        });

        BUTTON_M_plus.setText("M+");
        BUTTON_M_plus.setToolTipText("");
        BUTTON_M_plus.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_plus_minus.setText("±");
        BUTTON_plus_minus.setToolTipText("");
        BUTTON_plus_minus.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_plus_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_plus_minusActionPerformed(evt);
            }
        });

        BUTTON_divide.setText("/");
        BUTTON_divide.setToolTipText("");
        BUTTON_divide.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_divide.setName("/"); // NOI18N
        BUTTON_divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_multiply.setText("*");
        BUTTON_multiply.setToolTipText("");
        BUTTON_multiply.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_multiply.setName("*"); // NOI18N
        BUTTON_multiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_minus.setText("-");
        BUTTON_minus.setToolTipText("");
        BUTTON_minus.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_minus.setName("-"); // NOI18N
        BUTTON_minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_plus.setText("+");
        BUTTON_plus.setToolTipText("");
        BUTTON_plus.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_plus.setName("+"); // NOI18N
        BUTTON_plus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_equal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        BUTTON_equal.setText("=");
        BUTTON_equal.setToolTipText("");
        BUTTON_equal.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_equal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_equalActionPerformed(evt);
            }
        });

        BUTTON_dot.setText(".");
        BUTTON_dot.setToolTipText("");
        BUTTON_dot.setEnabled(false);
        BUTTON_dot.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_0.setText("0");
        BUTTON_0.setToolTipText("");
        BTNGroup_digits.add(BUTTON_0);
        BUTTON_0.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_0.setName("0"); // NOI18N
        BUTTON_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_1.setText("1");
        BUTTON_1.setToolTipText("");
        BTNGroup_digits.add(BUTTON_1);
        BUTTON_1.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_1.setName("1"); // NOI18N
        BUTTON_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_2.setText("2");
        BUTTON_2.setToolTipText("");
        BTNGroup_digits.add(BUTTON_2);
        BUTTON_2.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_2.setName("2"); // NOI18N
        BUTTON_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_3.setText("3");
        BUTTON_3.setToolTipText("");
        BTNGroup_digits.add(BUTTON_3);
        BUTTON_3.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_3.setName("3"); // NOI18N
        BUTTON_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_4.setText("4");
        BUTTON_4.setToolTipText("");
        BTNGroup_digits.add(BUTTON_4);
        BUTTON_4.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_4.setName("4"); // NOI18N
        BUTTON_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_5.setText("5");
        BUTTON_5.setToolTipText("");
        BTNGroup_digits.add(BUTTON_5);
        BUTTON_5.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_5.setName("5"); // NOI18N
        BUTTON_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_6.setText("6");
        BUTTON_6.setToolTipText("");
        BTNGroup_digits.add(BUTTON_6);
        BUTTON_6.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_6.setName("6"); // NOI18N
        BUTTON_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_7.setText("7");
        BUTTON_7.setToolTipText("");
        BTNGroup_digits.add(BUTTON_7);
        BUTTON_7.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_7.setName("7"); // NOI18N
        BUTTON_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_8.setText("8");
        BUTTON_8.setToolTipText("");
        BTNGroup_digits.add(BUTTON_8);
        BUTTON_8.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_8.setName("8"); // NOI18N
        BUTTON_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_9.setText("9");
        BUTTON_9.setToolTipText("");
        BTNGroup_digits.add(BUTTON_9);
        BUTTON_9.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_9.setName("9"); // NOI18N
        BUTTON_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_A.setText("A");
        BUTTON_A.setToolTipText("");
        BTNGroup_digits.add(BUTTON_A);
        BUTTON_A.setEnabled(false);
        BUTTON_A.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_A.setName("a"); // NOI18N
        BUTTON_A.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_B.setText("B");
        BUTTON_B.setToolTipText("");
        BTNGroup_digits.add(BUTTON_B);
        BUTTON_B.setEnabled(false);
        BUTTON_B.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_B.setName("b"); // NOI18N
        BUTTON_B.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_C.setText("C");
        BUTTON_C.setToolTipText("");
        BTNGroup_digits.add(BUTTON_C);
        BUTTON_C.setEnabled(false);
        BUTTON_C.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_C.setName("c"); // NOI18N
        BUTTON_C.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_D.setText("D");
        BUTTON_D.setToolTipText("");
        BTNGroup_digits.add(BUTTON_D);
        BUTTON_D.setEnabled(false);
        BUTTON_D.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_D.setName("d"); // NOI18N
        BUTTON_D.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_E.setText("E");
        BUTTON_E.setToolTipText("");
        BTNGroup_digits.add(BUTTON_E);
        BUTTON_E.setEnabled(false);
        BUTTON_E.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_E.setName("e"); // NOI18N
        BUTTON_E.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_F.setText("F");
        BUTTON_F.setToolTipText("");
        BTNGroup_digits.add(BUTTON_F);
        BUTTON_F.setEnabled(false);
        BUTTON_F.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_F.setName("f"); // NOI18N
        BUTTON_F.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_AddDigitActionPerformed(evt);
            }
        });

        BUTTON_MS.setText("MS");
        BUTTON_MS.setToolTipText("");
        BUTTON_MS.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_CC.setText("C");
        BUTTON_CC.setToolTipText("");
        BUTTON_CC.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_CE.setText("CE");
        BUTTON_CE.setToolTipText("");
        BUTTON_CE.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_CE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_ClearCurrentActionPerformed(evt);
            }
        });

        BUTTON_MR.setText("MR");
        BUTTON_MR.setToolTipText("");
        BUTTON_MR.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_MC.setText("MC");
        BUTTON_MC.setToolTipText("");
        BUTTON_MC.setMargin(new java.awt.Insets(2, 2, 2, 2));

        BUTTON_backspace.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        BUTTON_backspace.setText("←");
        BUTTON_backspace.setToolTipText("");
        BUTTON_backspace.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_backspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_RemoveDigitActionPerformed(evt);
            }
        });

        ComboBox.setEditable(true);
        ComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "16", "32", "64", "128", "256" }));
        ComboBox.setSelectedIndex(3);
        ComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxActionPerformed(evt);
            }
        });

        CHECK_BOX_signed.setSelected(true);
        CHECK_BOX_signed.setText("signed");
        CHECK_BOX_signed.setIconTextGap(10);
        CHECK_BOX_signed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CHECK_BOX_signedActionPerformed(evt);
            }
        });

        BUTTON_AsR.setText("AsR");
        BUTTON_AsR.setToolTipText("Arithmetic shift Right");
        BUTTON_AsR.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_AsR.setName("asr"); // NOI18N
        BUTTON_AsR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_LsR.setText("LsR");
        BUTTON_LsR.setToolTipText("Logical shift Right");
        BUTTON_LsR.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_LsR.setName("lsr"); // NOI18N
        BUTTON_LsR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_RoR.setText("RoR");
        BUTTON_RoR.setToolTipText("Rotate Right");
        BUTTON_RoR.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_RoR.setName("ror"); // NOI18N
        BUTTON_RoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_Not.setText("Not");
        BUTTON_Not.setToolTipText("");
        BUTTON_Not.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_Not.setName("not"); // NOI18N
        BUTTON_Not.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_NotActionPerformed(evt);
            }
        });

        BUTTON_And.setText("And");
        BUTTON_And.setToolTipText("");
        BUTTON_And.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_And.setName("and"); // NOI18N
        BUTTON_And.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_closed_parenthesis.setText(")");
        BUTTON_closed_parenthesis.setToolTipText("");
        BUTTON_closed_parenthesis.setEnabled(false);
        BUTTON_closed_parenthesis.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_closed_parenthesis.setName(")"); // NOI18N

        BUTTON_Or.setText("Or");
        BUTTON_Or.setToolTipText("");
        BUTTON_Or.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_Or.setName("or"); // NOI18N
        BUTTON_Or.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_Xor.setText("Xor");
        BUTTON_Xor.setToolTipText("");
        BUTTON_Xor.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_Xor.setName("xor"); // NOI18N
        BUTTON_Xor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_RoL.setText("RoL");
        BUTTON_RoL.setToolTipText("Rotate Left");
        BUTTON_RoL.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_RoL.setName("rol"); // NOI18N
        BUTTON_RoL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_ShL.setText("ShL");
        BUTTON_ShL.setToolTipText("Shift Left");
        BUTTON_ShL.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_ShL.setName("shl"); // NOI18N
        BUTTON_ShL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_Mod.setText("Mod");
        BUTTON_Mod.setToolTipText("");
        BUTTON_Mod.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_Mod.setName("mod"); // NOI18N
        BUTTON_Mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUTTON_OperationActionPerformed(evt);
            }
        });

        BUTTON_open_parenthesis.setText("(");
        BUTTON_open_parenthesis.setToolTipText("");
        BUTTON_open_parenthesis.setEnabled(false);
        BUTTON_open_parenthesis.setMargin(new java.awt.Insets(2, 2, 2, 2));
        BUTTON_open_parenthesis.setName("("); // NOI18N

        LABEL_carry_flag.setText("C");
        LABEL_carry_flag.setEnabled(false);

        LABEL_parity_flag.setText("P");
        LABEL_parity_flag.setEnabled(false);

        LABEL_zero_flag.setText("Z");
        LABEL_zero_flag.setEnabled(false);

        LABEL_sign_flag.setText("S");
        LABEL_sign_flag.setEnabled(false);

        LABEL_overflow_flag.setText("O");
        LABEL_overflow_flag.setEnabled(false);

        LABEL_carry_bit.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 11)); // NOI18N
        LABEL_carry_bit.setText("0");
        LABEL_carry_bit.setToolTipText("");
        LABEL_carry_bit.setEnabled(false);

        LABEL_parity_bit.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 11)); // NOI18N
        LABEL_parity_bit.setText("0");
        LABEL_parity_bit.setToolTipText("");
        LABEL_parity_bit.setEnabled(false);

        LABEL_zero_bit.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 11)); // NOI18N
        LABEL_zero_bit.setText("0");
        LABEL_zero_bit.setToolTipText("");
        LABEL_zero_bit.setEnabled(false);

        LABEL_sign_bit.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 11)); // NOI18N
        LABEL_sign_bit.setText("0");
        LABEL_sign_bit.setToolTipText("");
        LABEL_sign_bit.setEnabled(false);

        LABEL_overflow_bit.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 11)); // NOI18N
        LABEL_overflow_bit.setText("0");
        LABEL_overflow_bit.setToolTipText("");
        LABEL_overflow_bit.setEnabled(false);

        MENU_View.setText("View");
        MenuBar.add(MENU_View);

        MENU_Edit.setText("Edit");
        MenuBar.add(MENU_Edit);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ScrollPane)
                    .addComponent(PANEL_Bits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(PANEL_base, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE)
                                .addGap(1, 1, 1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboBox, 0, 1, Short.MAX_VALUE)
                                    .addComponent(CHECK_BOX_signed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(2, 2, 2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LABEL_overflow_flag)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LABEL_sign_flag)
                                        .addGap(7, 7, 7)
                                        .addComponent(LABEL_zero_flag)
                                        .addGap(7, 7, 7)
                                        .addComponent(LABEL_parity_flag)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LABEL_carry_flag))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(LABEL_overflow_bit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LABEL_sign_bit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LABEL_zero_bit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LABEL_parity_bit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(LABEL_carry_bit)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BUTTON_RoL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_ShL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_Mod, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_open_parenthesis, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_Or, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_Xor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(BUTTON_F, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_E, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(BUTTON_1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(BUTTON_0, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_dot, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(BUTTON_closed_parenthesis, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_RoR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_LsR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_AsR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_Not, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_And, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(BUTTON_B, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(BUTTON_C, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(BUTTON_D, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(BUTTON_A, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(1, 1, 1)
                                                .addComponent(BUTTON_MC, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(BUTTON_8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_CE, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(BUTTON_MR, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(BUTTON_6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(BUTTON_CC, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(BUTTON_9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(BUTTON_MS, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(39, 39, 39)))
                                .addGap(1, 1, 1)
                                .addComponent(BUTTON_equal, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BUTTON_M_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(BUTTON_M_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BUTTON_multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(BUTTON_Min, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BUTTON_divide, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(BUTTON_Max, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(BUTTON_plus_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(BUTTON_sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PANEL_Bits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PANEL_base, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BUTTON_M_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_M_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_MS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_MR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_MC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_A, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_closed_parenthesis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_open_parenthesis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BUTTON_sqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_plus_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_CC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_CE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_backspace, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_B, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_AsR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_Mod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BUTTON_Max, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_divide, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_C, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_LsR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_ShL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BUTTON_Min, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUTTON_multiply, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUTTON_6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUTTON_5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUTTON_4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUTTON_D, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUTTON_RoR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUTTON_RoL, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BUTTON_minus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_E, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_Not, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BUTTON_Xor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(BUTTON_equal, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(CHECK_BOX_signed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BUTTON_plus, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BUTTON_dot, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BUTTON_0, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BUTTON_F, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BUTTON_And, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BUTTON_Or, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(LABEL_carry_flag)
                                    .addComponent(LABEL_parity_flag)
                                    .addComponent(LABEL_zero_flag)
                                    .addComponent(LABEL_sign_flag)
                                    .addComponent(LABEL_overflow_flag))
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(LABEL_carry_bit)
                                    .addComponent(LABEL_parity_bit)
                                    .addComponent(LABEL_zero_bit)
                                    .addComponent(LABEL_sign_bit)
                                    .addComponent(LABEL_overflow_bit))))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void myInitComponets() {
        for (int i = 0; i < TOTAL_BIT_NUM; i++) {
            LABEL_bitGroup[i] = new JLabel();

            LABEL_bitGroup[i].setFont(new java.awt.Font("DejaVu Sans Mono", 0, 14)); // NOI18N
            LABEL_bitGroup[i].setText("0");
            LABEL_bitGroup[i].setToolTipText(i + "");
            LABEL_bitGroup[i].setName(i + ""); // NOI18N
            LABEL_bitGroup[i].addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    LABEL_bitGroup_MousePressed(evt);
                }
            });
        }

        changeBase();
        changeNumberOfBits(64);
    }

    void LABEL_bitGroup_MousePressed(MouseEvent evt) {
        JLabel bitLabel = (JLabel)evt.getComponent();
        int bitPos = Integer.parseInt(bitLabel.getName());

        Operands[Active] = Operands[Active].flipBit(bitPos);
        Operands[Active] = adjustForOverflow(Operands[Active]);
        bitLabel.setText(bitLabel.getText().equals("1") ? "0" : "1");

        refreshTextArea();

        System.out.println(evt.getComponent().getName());
    }

    private void addKeyDispatcher() {
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher((KeyEvent e) -> {
            if (e.getID()==KeyEvent.KEY_PRESSED) {
                if (getFocusOwner().getClass().getSimpleName().equals("BorderlessTextField") &&
                    e.getKeyCode() != 27)
                    return false;
                System.out.println("Key Code: " + e.getKeyCode());
                switch(e.getKeyCode()) {
                    default:
                        return false;
                    case 27:
                        System.out.println("Esc");
                        requestFocus();
                        break;
                    case 8:
                        BUTTON_backspace.doClick();
                        break;
                    case 10:
                    case 61:
                        BUTTON_equal.doClick();
                        break;
                    case 107:
                        BUTTON_plus.doClick();
                        break;
                    case 109:
                    case 45:
                        BUTTON_minus.doClick();
                        break;
                    case 106:
                        BUTTON_multiply.doClick();
                        break;
                    case 111:
                        BUTTON_divide.doClick();
                        break;
                    case '0':
                    case '0' + 48:
                        BUTTON_0.doClick();
                        break;
                    case '1':
                    case '1' + 48:
                        BUTTON_1.doClick();
                        break;
                    case '2':
                    case '2' + 48:
                        BUTTON_2.doClick();
                        break;
                    case '3':
                    case '3' + 48:
                        BUTTON_3.doClick();
                        break;
                    case '4':
                    case '4' + 48:
                        BUTTON_4.doClick();
                        break;
                    case '5':
                    case '5' + 48:
                        BUTTON_5.doClick();
                        break;
                    case '6':
                    case '6' + 48:
                        BUTTON_6.doClick();
                        break;
                    case '7':
                    case '7' + 48:
                        BUTTON_7.doClick();
                        break;
                    case '8':
                    case '8' + 48:
                        BUTTON_8.doClick();
                        break;
                    case '9':
                    case '9' + 48:
                        BUTTON_9.doClick();
                        break;
                    case 'A':
                        BUTTON_A.doClick();
                        break;
                    case 'B':
                        BUTTON_B.doClick();
                        break;
                    case 'C':
                        BUTTON_C.doClick();
                        break;
                    case 'D':
                        BUTTON_D.doClick();
                        break;
                    case 'E':
                        BUTTON_E.doClick();
                        break;
                    case 'F':
                        BUTTON_F.doClick();
                        break;
                }
                //Return 'true' if you want to discard the event.
                return true;
            }
            return false;
        });
    }

    private void RadioB_Group_base_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RadioB_Group_base_ActionPerformed
        changeBase();
    }//GEN-LAST:event_RadioB_Group_base_ActionPerformed

    private void BUTTON_AddDigitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_AddDigitActionPerformed
        if (DivisionByZero)
            return;

        String digit = ((JButton) evt.getSource()).getName();
        if (!SecondOperandEntered) {
                Operands[1] = BigInteger.ZERO;
                SecondOperandEntered = true;
        }
        BigInteger newValue = Operands[Active].multiply(new BigInteger(Integer.toString(Base)))
                        .add(new BigInteger(digit, Base));
        if (newValue.compareTo(adjustForOverflow(newValue)) == 0) {
            Operands[Active] = newValue;
            changeAllBits(Operands[Active]);
        }

        refreshTextArea();
    }//GEN-LAST:event_BUTTON_AddDigitActionPerformed

    private void BUTTON_RemoveDigitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_RemoveDigitActionPerformed
        if (DivisionByZero)
            return;
        if (OperationUnderway && !SecondOperandEntered)
            return;

        Operands[Active] = Operands[Active].divide(new BigInteger(Integer.toString(Base)));
        changeAllBits(Operands[Active]);

        refreshTextArea();
    }//GEN-LAST:event_BUTTON_RemoveDigitActionPerformed

    private void BUTTON_ClearCurrentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_ClearCurrentActionPerformed
        Operands[Active] = BigInteger.ZERO;
        changeAllBits(Operands[Active]);
        DivisionByZero = false;

        refreshTextArea();
    }//GEN-LAST:event_BUTTON_ClearCurrentActionPerformed

    private void BUTTON_OperationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_OperationActionPerformed
        if (DivisionByZero)
            return;
        if (SecondOperandEntered)
            performOperation();
        JButton button = (JButton) evt.getSource();
        Operation = button.getName();
        Operands[1] = Operands[0];
        OperationUnderway = true;
        Active = 1;

        System.out.println(Operation);
        refreshTextArea();
    }//GEN-LAST:event_BUTTON_OperationActionPerformed

    private void BUTTON_equalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_equalActionPerformed
        performOperation();
    }//GEN-LAST:event_BUTTON_equalActionPerformed

    private void ComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        try {
            int bitNum = Integer.parseInt((String)cb.getSelectedItem());
            if (bitNum < 0)
                throw new NumberFormatException("negative number");
            if (bitNum > TOTAL_BIT_NUM) {
                bitNum = TOTAL_BIT_NUM;
                cb.setSelectedItem(TOTAL_BIT_NUM + "");
            }
            changeNumberOfBits(bitNum);
            requestFocus();
        } catch (NumberFormatException e) {
            System.out.println("Bad bit length format");
        }
    }//GEN-LAST:event_ComboBoxActionPerformed

    private void CHECK_BOX_signedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CHECK_BOX_signedActionPerformed
        BUTTON_plus_minus.setEnabled(CHECK_BOX_signed.isSelected());
        BUTTON_AsR.setEnabled(CHECK_BOX_signed.isSelected());

        Operands[0] = adjustForOverflow(Operands[0]);
        if (OperationUnderway)
            Operands[1] = adjustForOverflow(Operands[1]);

        refreshTextArea();
    }//GEN-LAST:event_CHECK_BOX_signedActionPerformed

    private void BUTTON_plus_minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_plus_minusActionPerformed
        if (Operands[Active].compareTo(CurrentMaxInt.negate()) != 0) {
            Operands[Active] = Operands[Active].negate();
            changeAllBits(Operands[Active]);

            refreshTextArea();
        }
    }//GEN-LAST:event_BUTTON_plus_minusActionPerformed

    private void BUTTON_MaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_MaxActionPerformed
        Operands[Active] = CHECK_BOX_signed.isSelected() ? CurrentMaxInt : CurrentMaxInt.shiftLeft(1);
        Operands[Active] = Operands[Active].subtract(BigInteger.ONE);

        changeAllBits(Operands[Active]);
        refreshTextArea();
    }//GEN-LAST:event_BUTTON_MaxActionPerformed

    private void BUTTON_MinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_MinActionPerformed
        Operands[Active] = CHECK_BOX_signed.isSelected() ? CurrentMaxInt.negate() : BigInteger.ZERO;

        changeAllBits(Operands[Active]);
        refreshTextArea();
    }//GEN-LAST:event_BUTTON_MinActionPerformed

    private void BUTTON_NotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUTTON_NotActionPerformed
        Operands[Active] = adjustForOverflow(Operands[Active].not());
        //Operands[Active] = (Operands[Active].not());

        changeAllBits(Operands[Active]);
        refreshTextArea();
    }//GEN-LAST:event_BUTTON_NotActionPerformed

    private void testTextArea() {
        long start=System.currentTimeMillis();

        int value = 0;
        Document doc = new javax.swing.text.DefaultStyledDocument();
        if (false)
            for (int i = 0; i < 100000; i++) {
                Operands[0] = Operands[0].add(BigInteger.ONE);
                refreshTextArea();
            }
        else
            for (int i = 0; i < 100000; i++) {
                value++;
                //doc.insertString(Base, Operation, a);
                //TextPane.setText(value + "");
                try {
                    doc.remove(0, doc.getLength());
                    doc.insertString(0, value + "", null);
                } catch (BadLocationException ex) {
                    System.out.println("Document: Bad Location error");
                }
                TextPane.setDocument(doc);
            }

        long end=System.currentTimeMillis();
        System.out.println("time = "+(end-start));
        try {
            doc = TextPane.getDocument();
            System.out.println(doc.getText(0, doc.getLength()));
            System.out.println(doc.getText(0, doc.getLength()/2));
            System.out.println("doc length: " + doc.getLength());
        } catch (BadLocationException ex) {
            System.out.println("Document: Bad Location error");
        }
    }

    private void changeBase() {
        for (AbstractButton ab : Collections.list(BTNGroup_base.getElements()))
            if (ab.isSelected()) {
                Base = Integer.parseInt(ab.getName());
                break;
            }

        for (AbstractButton ab : Collections.list(BTNGroup_digits.getElements()))
            if (Integer.parseInt(ab.getName(), 16) < Base)
                ab.setEnabled(true);
            else
                ab.setEnabled(false);

        refreshTextArea();
    }

    private void changeAllBits(BigInteger value) {
        for (int i = 0; i < CurrentMaxInt.bitLength(); i++)
            LABEL_bitGroup[i].setText(value.testBit(i) ? "1" : "0");
    }

    private void changeNumberOfBits(int bitNum) {
        if (bitNum < 0)
            return;
        else
            CurrentMaxInt = BigInteger.ONE.shiftLeft(bitNum-1);

        if (bitNum != 0)
            Operands[0] = Operands[0].mod(CurrentMaxInt.shiftLeft(1));
        else
            Operands[0] = BigInteger.ZERO;
        Operands[0] = adjustForOverflow(Operands[0]);
        changeAllBits(Operands[0]);
        if (OperationUnderway) {
            if (bitNum != 0)
                Operands[1] = Operands[1].mod(CurrentMaxInt.shiftLeft(1));
            else
                Operands[1] = BigInteger.ZERO;
            Operands[1] = adjustForOverflow(Operands[1]);
            changeAllBits(Operands[1]);
        }
        refreshTextArea();

        int rowNum = (int) Math.ceil(bitNum/32.0);
        //setSize(415+10, 406+10+23*(rowNum-1));
        setSize(415, 406+23*(rowNum-1));

        PANEL_Bits.removeAll();

        GroupLayout myPANEL_BitsLayout = new GroupLayout(PANEL_Bits);
        PANEL_Bits.setLayout(myPANEL_BitsLayout);

        // Horizontal group
        SequentialGroup hsg = myPANEL_BitsLayout.createSequentialGroup();
        hsg.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE);

        ParallelGroup hsg_pg = myPANEL_BitsLayout.createParallelGroup(Alignment.LEADING);
        for (int r = 0; r < rowNum; r++) {
            SequentialGroup hsg_pg_sg = myPANEL_BitsLayout.createSequentialGroup();

            for (int i = 31; i >= 0; i--) {
                if (i+r*32 >= bitNum)
                    continue;
                hsg_pg_sg.addComponent(LABEL_bitGroup[i+r*32]);
                switch(i) {
                    case 28:
                    case 20:
                    case 12:
                    case 4:
                        //hsg_pg_sg.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED);
                        //break;
                    case 24:
                    case 8:
                        hsg_pg_sg.addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED);
                        break;
                    case 16:
                        hsg_pg_sg.addGap(18, 18, 18);
                        break;
                    case 0:
                        break;
                    default:
                        hsg_pg_sg.addGap(1, 1, 1);
                        break;
                }
            }
            hsg_pg.addGroup(Alignment.TRAILING, hsg_pg_sg);
        }
        hsg.addGroup(hsg_pg);
        //hsg.addContainerGap();
        hsg.addGap(14, 14, 14);

        myPANEL_BitsLayout.setHorizontalGroup(
            myPANEL_BitsLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(hsg));

        // Vertical group
        SequentialGroup vsg = myPANEL_BitsLayout.createSequentialGroup();
        vsg.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE);
        int i = bitNum-1;
        for (int r = 0; r < rowNum; r++) {
            if (r == 0)
                vsg.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE);
            else
                vsg.addPreferredGap(LayoutStyle.ComponentPlacement.RELATED);

            ParallelGroup vsg_pg = myPANEL_BitsLayout.createParallelGroup(Alignment.BASELINE);

            while (i >= 32*(rowNum-1-r)) {
                vsg_pg.addComponent(LABEL_bitGroup[i]);
                i--;
            }
            vsg.addGroup(myPANEL_BitsLayout.createParallelGroup(Alignment.LEADING).addGroup(vsg_pg));
        }
        vsg.addContainerGap();

        myPANEL_BitsLayout.setVerticalGroup(
            myPANEL_BitsLayout.createParallelGroup(Alignment.LEADING)
            .addGroup(Alignment.TRAILING, vsg));
    }

    private void performOperation() {
        SecondOperandEntered = false;
        OperationUnderway = false;
        Active = 0;
        switch(Operation) {
            case "+":
                Operands[0] = Operands[0].add(Operands[1]);
                break;
            case "-":
                Operands[0] = Operands[0].subtract(Operands[1]);
                break;
            case "*":
                Operands[0] = Operands[0].multiply(Operands[1]);
                break;
            case "/":
                if (Operands[1].equals(BigInteger.ZERO)) {
                    TextPane.setText("Division by zero is undefined.");
                    DivisionByZero = true;
                    Operation = "";
                    return;
                }
                Operands[0] = Operands[0].divide(Operands[1]);
                break;
            case "mod":
                Operands[0] = Operands[0].mod(Operands[1]);
                break;
            case "and":
                Operands[0] = Operands[0].and(Operands[1]);
                break;
            case "or":
                Operands[0] = Operands[0].or(Operands[1]);
                break;
            case "xor":
                Operands[0] = Operands[0].xor(Operands[1]);
                break;
            case "asr":
                try {
                    Operands[0] = Operands[0].shiftRight(Operands[1].intValueExact());
                } catch (ArithmeticException e) {
                    Operands[0] = Operands[0].shiftRight(Operands[0].bitLength());
                    // If TOTAL_BIT_NUM ever gets above the maximum int value
                    // shifring will need a better implementation
                }
                break;
            case "lsr":
                boolean signed = CHECK_BOX_signed.isSelected();
                CHECK_BOX_signed.setSelected(false);
                Operands[0] = adjustForOverflow(Operands[0]);
                try {
                    Operands[0] = Operands[0].shiftRight(Operands[1].intValueExact());
                } catch (ArithmeticException e) {
                    Operands[0] = BigInteger.ZERO;
                }
                CHECK_BOX_signed.setSelected(signed);
                break;
            case "shl":
                try {
                    Operands[0] = Operands[0].shiftLeft(Operands[1].intValueExact());
                } catch (ArithmeticException e) {
                    Operands[0] = BigInteger.ZERO;
                }
                break;
            case "ror":
                signed = CHECK_BOX_signed.isSelected();
                CHECK_BOX_signed.setSelected(false);
                Operands[0] = adjustForOverflow(Operands[0]);
                int rotation_number = Operands[1].mod(new BigInteger(CurrentMaxInt.bitLength() + "")).intValue();
                for (int i = 0; i < rotation_number; i++) {
                    boolean bit = Operands[0].testBit(0);
                    Operands[0] = Operands[0].shiftRight(1);
                    if (bit)
                        Operands[0] = Operands[0].setBit(CurrentMaxInt.bitLength()-1);
                }
                CHECK_BOX_signed.setSelected(signed);
                break;
            case "rol":
                signed = CHECK_BOX_signed.isSelected();
                CHECK_BOX_signed.setSelected(false);
                Operands[0] = adjustForOverflow(Operands[0]);
                rotation_number = Operands[1].mod(new BigInteger(CurrentMaxInt.bitLength() + "")).intValue();
                for (int i = 0; i < rotation_number; i++) {
                    boolean bit = Operands[0].testBit(CurrentMaxInt.bitLength()-1);
                    Operands[0] = Operands[0].shiftLeft(1);
                    if (bit)
                        Operands[0] = Operands[0].setBit(0);
                }
                CHECK_BOX_signed.setSelected(signed);
                break;
            default:
                return;
        }
        Operands[0] = adjustForOverflow(Operands[0]);
        changeAllBits(Operands[0]);

        refreshTextArea();
    }

    private BigInteger adjustForOverflow(BigInteger value) {
        value = value.mod(CurrentMaxInt.shiftLeft(1));
        boolean signed = CHECK_BOX_signed.isSelected();
        BigInteger upperBound = signed ? CurrentMaxInt : CurrentMaxInt.shiftLeft(1);
        BigInteger lowerBound = signed ? CurrentMaxInt : BigInteger.ZERO;
        BigInteger overflow = value.subtract(upperBound);
        BigInteger underflow = value.add(lowerBound);

        if (overflow.compareTo(BigInteger.ZERO) >= 0)
            value = overflow.subtract(lowerBound);
        else if (underflow.compareTo(BigInteger.ZERO) < 0)
            value = underflow.add(upperBound);

        return value;
    }

    private void refreshTextArea() {
        String out = Operands[0].toString(Base);
        if (OperationUnderway)
            out += '\n' + Operation + '\n' + Operands[1].toString(Base);
        TextPane.setText(out);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
            //for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            //    if ("Nimbus".equals(info.getName())) {
            //        javax.swing.UIManager.setLookAndFeel(info.getClassName());
            //        break;
            //    }
            //}
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BTNGroup_base;
    private javax.swing.ButtonGroup BTNGroup_digits;
    private javax.swing.JButton BUTTON_0;
    private javax.swing.JButton BUTTON_1;
    private javax.swing.JButton BUTTON_2;
    private javax.swing.JButton BUTTON_3;
    private javax.swing.JButton BUTTON_4;
    private javax.swing.JButton BUTTON_5;
    private javax.swing.JButton BUTTON_6;
    private javax.swing.JButton BUTTON_7;
    private javax.swing.JButton BUTTON_8;
    private javax.swing.JButton BUTTON_9;
    private javax.swing.JButton BUTTON_A;
    private javax.swing.JButton BUTTON_And;
    private javax.swing.JButton BUTTON_AsR;
    private javax.swing.JButton BUTTON_B;
    private javax.swing.JButton BUTTON_C;
    private javax.swing.JButton BUTTON_CC;
    private javax.swing.JButton BUTTON_CE;
    private javax.swing.JButton BUTTON_D;
    private javax.swing.JButton BUTTON_E;
    private javax.swing.JButton BUTTON_F;
    private javax.swing.JButton BUTTON_LsR;
    private javax.swing.JButton BUTTON_MC;
    private javax.swing.JButton BUTTON_MR;
    private javax.swing.JButton BUTTON_MS;
    private javax.swing.JButton BUTTON_M_minus;
    private javax.swing.JButton BUTTON_M_plus;
    private javax.swing.JButton BUTTON_Max;
    private javax.swing.JButton BUTTON_Min;
    private javax.swing.JButton BUTTON_Mod;
    private javax.swing.JButton BUTTON_Not;
    private javax.swing.JButton BUTTON_Or;
    private javax.swing.JButton BUTTON_RoL;
    private javax.swing.JButton BUTTON_RoR;
    private javax.swing.JButton BUTTON_ShL;
    private javax.swing.JButton BUTTON_Xor;
    private javax.swing.JButton BUTTON_backspace;
    private javax.swing.JButton BUTTON_closed_parenthesis;
    private javax.swing.JButton BUTTON_divide;
    private javax.swing.JButton BUTTON_dot;
    private javax.swing.JButton BUTTON_equal;
    private javax.swing.JButton BUTTON_minus;
    private javax.swing.JButton BUTTON_multiply;
    private javax.swing.JButton BUTTON_open_parenthesis;
    private javax.swing.JButton BUTTON_plus;
    private javax.swing.JButton BUTTON_plus_minus;
    private javax.swing.JButton BUTTON_sqrt;
    private javax.swing.JCheckBox CHECK_BOX_signed;
    private javax.swing.JComboBox<String> ComboBox;
    private javax.swing.JLabel LABEL_bit0;
    private javax.swing.JLabel LABEL_bit1;
    private javax.swing.JLabel LABEL_bit10;
    private javax.swing.JLabel LABEL_bit11;
    private javax.swing.JLabel LABEL_bit12;
    private javax.swing.JLabel LABEL_bit13;
    private javax.swing.JLabel LABEL_bit14;
    private javax.swing.JLabel LABEL_bit15;
    private javax.swing.JLabel LABEL_bit16;
    private javax.swing.JLabel LABEL_bit17;
    private javax.swing.JLabel LABEL_bit18;
    private javax.swing.JLabel LABEL_bit19;
    private javax.swing.JLabel LABEL_bit2;
    private javax.swing.JLabel LABEL_bit20;
    private javax.swing.JLabel LABEL_bit21;
    private javax.swing.JLabel LABEL_bit22;
    private javax.swing.JLabel LABEL_bit23;
    private javax.swing.JLabel LABEL_bit24;
    private javax.swing.JLabel LABEL_bit25;
    private javax.swing.JLabel LABEL_bit26;
    private javax.swing.JLabel LABEL_bit27;
    private javax.swing.JLabel LABEL_bit28;
    private javax.swing.JLabel LABEL_bit29;
    private javax.swing.JLabel LABEL_bit3;
    private javax.swing.JLabel LABEL_bit30;
    private javax.swing.JLabel LABEL_bit31;
    private javax.swing.JLabel LABEL_bit4;
    private javax.swing.JLabel LABEL_bit5;
    private javax.swing.JLabel LABEL_bit6;
    private javax.swing.JLabel LABEL_bit7;
    private javax.swing.JLabel LABEL_bit8;
    private javax.swing.JLabel LABEL_bit9;
    private javax.swing.JLabel LABEL_carry_bit;
    private javax.swing.JLabel LABEL_carry_flag;
    private javax.swing.JLabel LABEL_overflow_bit;
    private javax.swing.JLabel LABEL_overflow_flag;
    private javax.swing.JLabel LABEL_parity_bit;
    private javax.swing.JLabel LABEL_parity_flag;
    private javax.swing.JLabel LABEL_sign_bit;
    private javax.swing.JLabel LABEL_sign_flag;
    private javax.swing.JLabel LABEL_zero_bit;
    private javax.swing.JLabel LABEL_zero_flag;
    private javax.swing.JMenu MENU_Edit;
    private javax.swing.JMenu MENU_View;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JPanel PANEL_Bits;
    private javax.swing.JPanel PANEL_base;
    private javax.swing.JRadioButton RadioB_Bin;
    private javax.swing.JRadioButton RadioB_Dec;
    private javax.swing.JRadioButton RadioB_Hex;
    private javax.swing.JRadioButton RadioB_Oct;
    private javax.swing.JScrollPane ScrollPane;
    private javax.swing.JTextPane TextPane;
    // End of variables declaration//GEN-END:variables
    // My variables
    private final BigInteger[] Operands;
    private int Active;
    private int Base;
    private boolean SecondOperandEntered;
    private boolean OperationUnderway;
    private boolean DivisionByZero;
    private String Operation;
    // Bits
    private static final int TOTAL_BIT_NUM = 256;
    private final JLabel[] LABEL_bitGroup;
    BigInteger CurrentMaxInt;
}